ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** 
  22:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  23:Src/main.c    **** /* USER CODE BEGIN Includes */
  24:Src/main.c    **** 
  25:Src/main.c    **** /* USER CODE END Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN PTD */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 2


  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PM */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE BEGIN PV */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE END PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  49:Src/main.c    **** void SystemClock_Config(void);
  50:Src/main.c    **** static void MX_GPIO_Init(void);
  51:Src/main.c    **** /* USER CODE BEGIN PFP */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PFP */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  56:Src/main.c    **** /* USER CODE BEGIN 0 */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END 0 */
  59:Src/main.c    **** 
  60:Src/main.c    **** /**
  61:Src/main.c    ****   * @brief  The application entry point.
  62:Src/main.c    ****   * @retval int
  63:Src/main.c    ****   */
  64:Src/main.c    **** int main(void)
  65:Src/main.c    **** {
  66:Src/main.c    ****   /* USER CODE BEGIN 1 */
  67:Src/main.c    **** 
  68:Src/main.c    ****   /* USER CODE END 1 */
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Src/main.c    ****   HAL_Init();
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* USER CODE BEGIN Init */
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE END Init */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* Configure the system clock */
  80:Src/main.c    ****   SystemClock_Config();
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE END SysInit */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* Initialize all configured peripherals */
  87:Src/main.c    ****   MX_GPIO_Init();
  88:Src/main.c    ****   /* USER CODE BEGIN 2 */
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE END 2 */
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 3


  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Infinite loop */
  93:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  94:Src/main.c    ****   while (1)
  95:Src/main.c    ****   {
  96:Src/main.c    ****     /* USER CODE END WHILE */
  97:Src/main.c    **** 
  98:Src/main.c    ****     /* USER CODE BEGIN 3 */
  99:Src/main.c    ****   }
 100:Src/main.c    ****   /* USER CODE END 3 */
 101:Src/main.c    **** }
 102:Src/main.c    **** 
 103:Src/main.c    **** /**
 104:Src/main.c    ****   * @brief System Clock Configuration
 105:Src/main.c    ****   * @retval None
 106:Src/main.c    ****   */
 107:Src/main.c    **** void SystemClock_Config(void)
 108:Src/main.c    **** {
 109:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 110:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 111:Src/main.c    **** 
 112:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 113:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 114:Src/main.c    ****   */
 115:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 116:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 117:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 118:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 119:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 120:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 121:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 122:Src/main.c    ****   {
 123:Src/main.c    ****     Error_Handler();
 124:Src/main.c    ****   }
 125:Src/main.c    **** 
 126:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 127:Src/main.c    ****   */
 128:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 129:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 130:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 131:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 132:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 133:Src/main.c    **** 
 134:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 135:Src/main.c    ****   {
 136:Src/main.c    ****     Error_Handler();
 137:Src/main.c    ****   }
 138:Src/main.c    **** }
 139:Src/main.c    **** 
 140:Src/main.c    **** /**
 141:Src/main.c    ****   * @brief GPIO Initialization Function
 142:Src/main.c    ****   * @param None
 143:Src/main.c    ****   * @retval None
 144:Src/main.c    ****   */
 145:Src/main.c    **** static void MX_GPIO_Init(void)
 146:Src/main.c    **** {
  26              		.loc 1 146 1 view -0
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 4


  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 147:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 148:Src/main.c    **** /* USER CODE END MX_GPIO_Init_1 */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* GPIO Ports Clock Enable */
 151:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  34              		.loc 1 151 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 151 3 view .LVU2
  37              		.loc 1 151 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L2
  39 0004 5A69     		ldr	r2, [r3, #20]
  40 0006 8021     		movs	r1, #128
  41 0008 C903     		lsls	r1, r1, #15
  42 000a 0A43     		orrs	r2, r1
  43 000c 5A61     		str	r2, [r3, #20]
  44              		.loc 1 151 3 view .LVU4
  45 000e 5A69     		ldr	r2, [r3, #20]
  46 0010 0A40     		ands	r2, r1
  47 0012 0092     		str	r2, [sp]
  48              		.loc 1 151 3 view .LVU5
  49 0014 009A     		ldr	r2, [sp]
  50              	.LBE4:
  51              		.loc 1 151 3 view .LVU6
 152:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  52              		.loc 1 152 3 view .LVU7
  53              	.LBB5:
  54              		.loc 1 152 3 view .LVU8
  55              		.loc 1 152 3 view .LVU9
  56 0016 5A69     		ldr	r2, [r3, #20]
  57 0018 8021     		movs	r1, #128
  58 001a 8902     		lsls	r1, r1, #10
  59 001c 0A43     		orrs	r2, r1
  60 001e 5A61     		str	r2, [r3, #20]
  61              		.loc 1 152 3 view .LVU10
  62 0020 5B69     		ldr	r3, [r3, #20]
  63 0022 0B40     		ands	r3, r1
  64 0024 0193     		str	r3, [sp, #4]
  65              		.loc 1 152 3 view .LVU11
  66 0026 019B     		ldr	r3, [sp, #4]
  67              	.LBE5:
  68              		.loc 1 152 3 view .LVU12
 153:Src/main.c    **** 
 154:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 155:Src/main.c    **** /* USER CODE END MX_GPIO_Init_2 */
 156:Src/main.c    **** }
  69              		.loc 1 156 1 is_stmt 0 view .LVU13
  70 0028 02B0     		add	sp, sp, #8
  71              		@ sp needed
  72 002a 7047     		bx	lr
  73              	.L3:
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 5


  74              		.align	2
  75              	.L2:
  76 002c 00100240 		.word	1073876992
  77              		.cfi_endproc
  78              	.LFE42:
  80              		.section	.text.Error_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	Error_Handler
  83              		.syntax unified
  84              		.code	16
  85              		.thumb_func
  87              	Error_Handler:
  88              	.LFB43:
 157:Src/main.c    **** 
 158:Src/main.c    **** /* USER CODE BEGIN 4 */
 159:Src/main.c    **** 
 160:Src/main.c    **** /* USER CODE END 4 */
 161:Src/main.c    **** 
 162:Src/main.c    **** /**
 163:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 164:Src/main.c    ****   * @retval None
 165:Src/main.c    ****   */
 166:Src/main.c    **** void Error_Handler(void)
 167:Src/main.c    **** {
  89              		.loc 1 167 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 168:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 169:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 170:Src/main.c    ****   __disable_irq();
  95              		.loc 1 170 3 view .LVU15
  96              	.LBB6:
  97              	.LBI6:
  98              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 6


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 7


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 8


 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  99              		.loc 2 140 27 view .LVU16
 100              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 101              		.loc 2 142 3 view .LVU17
 102              		.syntax divided
 103              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 104 0000 72B6     		cpsid i
 105              	@ 0 "" 2
 106              		.thumb
 107              		.syntax unified
 108              	.L5:
 109              	.LBE7:
 110              	.LBE6:
 171:Src/main.c    ****   while (1)
 111              		.loc 1 171 3 view .LVU18
 172:Src/main.c    ****   {
 173:Src/main.c    ****   }
 112              		.loc 1 173 3 view .LVU19
 171:Src/main.c    ****   while (1)
 113              		.loc 1 171 9 view .LVU20
 114 0002 FEE7     		b	.L5
 115              		.cfi_endproc
 116              	.LFE43:
 118              		.section	.text.SystemClock_Config,"ax",%progbits
 119              		.align	1
 120              		.global	SystemClock_Config
 121              		.syntax unified
 122              		.code	16
 123              		.thumb_func
 125              	SystemClock_Config:
 126              	.LFB41:
 108:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 127              		.loc 1 108 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 72
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131 0000 00B5     		push	{lr}
 132              	.LCFI1:
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 14, -4
 135 0002 93B0     		sub	sp, sp, #76
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 80
 109:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 138              		.loc 1 109 3 view .LVU22
 109:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 139              		.loc 1 109 22 is_stmt 0 view .LVU23
 140 0004 3422     		movs	r2, #52
 141 0006 0021     		movs	r1, #0
 142 0008 05A8     		add	r0, sp, #20
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 9


 143 000a FFF7FEFF 		bl	memset
 144              	.LVL0:
 110:Src/main.c    **** 
 145              		.loc 1 110 3 is_stmt 1 view .LVU24
 110:Src/main.c    **** 
 146              		.loc 1 110 22 is_stmt 0 view .LVU25
 147 000e 1022     		movs	r2, #16
 148 0010 0021     		movs	r1, #0
 149 0012 01A8     		add	r0, sp, #4
 150 0014 FFF7FEFF 		bl	memset
 151              	.LVL1:
 115:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 152              		.loc 1 115 3 is_stmt 1 view .LVU26
 115:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 153              		.loc 1 115 36 is_stmt 0 view .LVU27
 154 0018 0123     		movs	r3, #1
 155 001a 0593     		str	r3, [sp, #20]
 116:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 156              		.loc 1 116 3 is_stmt 1 view .LVU28
 116:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 157              		.loc 1 116 30 is_stmt 0 view .LVU29
 158 001c 0693     		str	r3, [sp, #24]
 117:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 159              		.loc 1 117 3 is_stmt 1 view .LVU30
 117:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 160              		.loc 1 117 34 is_stmt 0 view .LVU31
 161 001e 0133     		adds	r3, r3, #1
 162 0020 0E93     		str	r3, [sp, #56]
 118:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 163              		.loc 1 118 3 is_stmt 1 view .LVU32
 118:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 164              		.loc 1 118 35 is_stmt 0 view .LVU33
 165 0022 8023     		movs	r3, #128
 166 0024 5B02     		lsls	r3, r3, #9
 167 0026 0F93     		str	r3, [sp, #60]
 119:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 168              		.loc 1 119 3 is_stmt 1 view .LVU34
 119:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 169              		.loc 1 119 32 is_stmt 0 view .LVU35
 170 0028 8023     		movs	r3, #128
 171 002a 5B03     		lsls	r3, r3, #13
 172 002c 1093     		str	r3, [sp, #64]
 120:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173              		.loc 1 120 3 is_stmt 1 view .LVU36
 121:Src/main.c    ****   {
 174              		.loc 1 121 3 view .LVU37
 121:Src/main.c    ****   {
 175              		.loc 1 121 7 is_stmt 0 view .LVU38
 176 002e 05A8     		add	r0, sp, #20
 177 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 178              	.LVL2:
 121:Src/main.c    ****   {
 179              		.loc 1 121 6 discriminator 1 view .LVU39
 180 0034 0028     		cmp	r0, #0
 181 0036 0ED1     		bne	.L9
 128:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 182              		.loc 1 128 3 is_stmt 1 view .LVU40
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 10


 128:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 183              		.loc 1 128 31 is_stmt 0 view .LVU41
 184 0038 0723     		movs	r3, #7
 185 003a 0193     		str	r3, [sp, #4]
 130:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 186              		.loc 1 130 3 is_stmt 1 view .LVU42
 130:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 187              		.loc 1 130 34 is_stmt 0 view .LVU43
 188 003c 053B     		subs	r3, r3, #5
 189 003e 0293     		str	r3, [sp, #8]
 131:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 190              		.loc 1 131 3 is_stmt 1 view .LVU44
 131:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 191              		.loc 1 131 35 is_stmt 0 view .LVU45
 192 0040 0023     		movs	r3, #0
 193 0042 0393     		str	r3, [sp, #12]
 132:Src/main.c    **** 
 194              		.loc 1 132 3 is_stmt 1 view .LVU46
 132:Src/main.c    **** 
 195              		.loc 1 132 36 is_stmt 0 view .LVU47
 196 0044 0493     		str	r3, [sp, #16]
 134:Src/main.c    ****   {
 197              		.loc 1 134 3 is_stmt 1 view .LVU48
 134:Src/main.c    ****   {
 198              		.loc 1 134 7 is_stmt 0 view .LVU49
 199 0046 0121     		movs	r1, #1
 200 0048 01A8     		add	r0, sp, #4
 201 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 202              	.LVL3:
 134:Src/main.c    ****   {
 203              		.loc 1 134 6 discriminator 1 view .LVU50
 204 004e 0028     		cmp	r0, #0
 205 0050 03D1     		bne	.L10
 138:Src/main.c    **** 
 206              		.loc 1 138 1 view .LVU51
 207 0052 13B0     		add	sp, sp, #76
 208              		@ sp needed
 209 0054 00BD     		pop	{pc}
 210              	.L9:
 123:Src/main.c    ****   }
 211              		.loc 1 123 5 is_stmt 1 view .LVU52
 212 0056 FFF7FEFF 		bl	Error_Handler
 213              	.LVL4:
 214              	.L10:
 136:Src/main.c    ****   }
 215              		.loc 1 136 5 view .LVU53
 216 005a FFF7FEFF 		bl	Error_Handler
 217              	.LVL5:
 218              		.cfi_endproc
 219              	.LFE41:
 221              		.section	.text.main,"ax",%progbits
 222              		.align	1
 223              		.global	main
 224              		.syntax unified
 225              		.code	16
 226              		.thumb_func
 228              	main:
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 11


 229              	.LFB40:
  65:Src/main.c    ****   /* USER CODE BEGIN 1 */
 230              		.loc 1 65 1 view -0
 231              		.cfi_startproc
 232              		@ Volatile: function does not return.
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 10B5     		push	{r4, lr}
 236              	.LCFI3:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 4, -8
 239              		.cfi_offset 14, -4
  73:Src/main.c    **** 
 240              		.loc 1 73 3 view .LVU55
 241 0002 FFF7FEFF 		bl	HAL_Init
 242              	.LVL6:
  80:Src/main.c    **** 
 243              		.loc 1 80 3 view .LVU56
 244 0006 FFF7FEFF 		bl	SystemClock_Config
 245              	.LVL7:
  87:Src/main.c    ****   /* USER CODE BEGIN 2 */
 246              		.loc 1 87 3 view .LVU57
 247 000a FFF7FEFF 		bl	MX_GPIO_Init
 248              	.LVL8:
 249              	.L12:
  94:Src/main.c    ****   {
 250              		.loc 1 94 3 view .LVU58
  99:Src/main.c    ****   /* USER CODE END 3 */
 251              		.loc 1 99 3 view .LVU59
  94:Src/main.c    ****   {
 252              		.loc 1 94 9 view .LVU60
 253 000e FEE7     		b	.L12
 254              		.cfi_endproc
 255              	.LFE40:
 257              		.text
 258              	.Letext0:
 259              		.file 3 "d:/Workspace/Tools/GCC_ARM/13.2 Rel1/arm-none-eabi/include/machine/_default_types.h"
 260              		.file 4 "d:/Workspace/Tools/GCC_ARM/13.2 Rel1/arm-none-eabi/include/sys/_stdint.h"
 261              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 262              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 263              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 264              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 265              		.file 9 "<built-in>"
ARM GAS  C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s:76     .text.MX_GPIO_Init:0000002c $d
C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s:81     .text.Error_Handler:00000000 $t
C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s:87     .text.Error_Handler:00000000 Error_Handler
C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s:119    .text.SystemClock_Config:00000000 $t
C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s:125    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s:222    .text.main:00000000 $t
C:\Users\Maksim\AppData\Local\Temp\ccEbU2NN.s:228    .text.main:00000000 main

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
